name: Release Please

on:
  push:
    branches:
      - main

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
    steps:
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          private_key: ${{ secrets.RELEASE_APP_PEM }}
          app_id: ${{ secrets.RELEASE_APP_ID }}

      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.get_token.outputs.token }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # Only run the publish job if releases were created
  publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          private_key: ${{ secrets.RELEASE_APP_PEM }}
          app_id: ${{ secrets.RELEASE_APP_ID }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.get_token.outputs.token }}
          ref: ${{ github.ref }}

      - name: Use Latest Corepack
        run: |
          echo "Before: corepack version => $(corepack --version || echo 'not installed')"
          npm install -g corepack@latest
          echo "After : corepack version => $(corepack --version)"
          corepack enable
          pnpm --version

      - name: Setup Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          cache: 'pnpm'
          node-version-file: package.json
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build packages
        run: pnpm run build

      - name: Publish to NPM
        run: pnpm -r publish --access=public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_REGISTRY }}
