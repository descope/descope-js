name: Release

on:
  push:
    branches:
      - tryToFixRelease

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  release:
    name: Release
    if: contains(github.event.head_commit.message, 'RELEASE')
    runs-on: ubuntu-latest
    steps:
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          private_key: ${{ secrets.RELEASE_APP_PEM }}
          app_id: ${{ secrets.RELEASE_APP_ID }}
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # full history so previous tags are reachable
          fetch-tags: true # ensure all tags are fetched
          # persist-credentials: false
          token: ${{ steps.get_token.outputs.token }}
          ref: ${{ github.ref }}
      - name: Ensure all tags (redundant safety)
        run: |
          git fetch --tags --force --prune
          echo "Fetched tags: $(git tag | wc -l)"
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Debug tag base selection
        run: |
          echo "Last 10 tags:"; git tag --sort=creatordate | tail -n 10
          BASE=$(sh ./tools/scripts/latestTag.sh)
          echo "latestTag.sh returned: $BASE"
          if git rev-parse "$BASE" >/dev/null 2>&1; then
            echo "Base ref is present locally";
          else
            echo "WARNING: Base ref $BASE not present locally";
          fi
      - name: Use Latest Corepack
        run: |
          echo "Before: corepack version => $(corepack --version || echo 'not installed')"
          npm install -g corepack@latest
          echo "After : corepack version => $(corepack --version)"
          corepack enable
          pnpm --version
      - name: Setup Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          cache: 'pnpm'
          node-version-file: package.json
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts
      - name: Build
        run: npm run version:ci
        env:
          GITHUB_TOKEN: ${{ steps.get_token.outputs.token }}
      - name: Run pnpm publish
        run: pnpm -r publish --access=public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_REGISTRY }}
      - name: Push versions, changelog and tags
        run: git push --atomic origin ${GITHUB_REF_NAME} $(git tag -l)
        env:
          GITHUB_TOKEN: ${{ steps.get_token.outputs.token }}
